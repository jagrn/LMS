@model LMS.ViewModels.ModuleViewModel

@{
    ViewBag.Title = "Manage";
}

@{
    var moduleId = Model.Id;
    var headBannerInfo = "Hantera moduler för kursen " + @Model.CourseName;
}

@{
    var thisLoadOrder = "";
    if (Model.ShowActivities)
    {
        if (Model.ShowDocuments)
        {
            thisLoadOrder = "Load";
        }

        else
        {
            thisLoadOrder = "LoadAct";
        }
    }
    else
    {
        if (Model.ShowDocuments)
        {
            thisLoadOrder = "LoadDoc";
        }
        else
        {
            thisLoadOrder = "LoadMini";
        }
    }

    string showActivities = "'false'";
    if (Model.ShowActivities)
    {
        showActivities = "'true'";
    }

    string showDocuments = "'false'";
    if (Model.ShowDocuments)
    {
        showDocuments = "'true'";
    }
}

@Html.Action("HeadBanner", "CommonLOs", new { origin = "ModuleMgmnt", id1 = Model.CourseId, id2 = Model.Id, infoText = headBannerInfo })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <!--menu-->
                <h4 class="page-header">Moduler</h4>               
                @{
                    <a class="btn btn-sm greenButton btnFlip" href="@Url.Action("Manage", "Courses", new { Id = Model.CourseId, getOperation = "LoadMini" })">v</a>
                    if (moduleId != 0)
                    {
                        <a class="btn btn-sm greenButton alignModBtnXRight" href="@Url.Action("Manage", "Modules", new { id = 0, courseId = Model.CourseId, getOperation = "New", viewMessage = "" })">+</a>
                        <a class="btn btn-sm redButton alignModBtnXRight" href="@Url.Action("Delete", "Modules", new { id = moduleId, courseId = Model.CourseId, deleteType = "Single" })">-</a>
                    }
                }

                <ul class="nav nav-pills nav-stacked">
                @foreach (var module in Model.CourseModules)
                {
                    if (module.Id == Model.Id)
                    {
                            <li class="active">@Html.ActionLink(module.Name, "Manage", new { id = module.Id, courseId = Model.CourseId, getOperation = thisLoadOrder })</li>
                    }
                    else
                    {
                            <li>@Html.ActionLink(module.Name, "Manage", new { id = module.Id, courseId = Model.CourseId, getOperation = "LoadMini" })</li>
                    }
                }
                </ul>
            </div><!--end menu-->
           
            <div class="form-horizontal col-md-6">
                
                @{
                    if (moduleId == 0)
                    {
                        <h4 class="page-header">Skapa ny modul</h4>
                    }
                    else
                    {
                        <h4 class="page-header">Redigera modulen @Model.Name</h4>
                    }
                }
          
                @{
                    if (Model.PostMessage != "")
                    {
                        <h5 class="text-danger">@Model.PostMessage</h5>
                    }
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PostNavigation)
                @Html.HiddenFor(model => model.PostOperation)
                @Html.HiddenFor(model => model.PostMessage)
                @Html.HiddenFor(model => model.CourseId)
                @Html.HiddenFor(model => model.ActivityId)
                @Html.HiddenFor(model => model.ShowActivities)
                @Html.HiddenFor(model => model.ShowDocuments)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9" style="margin-left:20px;">

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 " })
                    <div class="col-md-9" style="margin-left:20px;">

                        @Html.TextAreaFor(model => model.Description, 6, 40, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9" style="margin-left:20px;">

                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9" style="margin-left:20px;">

                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="btn-toolbar col-md-offset-2">

                    <!-- icons-->
                    @{
                        if (moduleId != 0)
                        {
                            @*<button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'Update', @moduleId, 0)" aria-label="Left Align">
                                <span class="glyphicon glyphiconsm glyphicon-save" aria-hidden="true"></span><br />Updatera
                            </button>*@

                            <button type="submit" class="btn btn-sm saveButton" onclick="PostConfig('Save', 'Update', @moduleId, 0, @showActivities, @showDocuments)" aria-label="Left Align">
                                Uppdatera
                            </button>
                        }
                        else
                        {
                            @*<button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'New', @moduleId, 0)" aria-label="Left Align">
                                <span class="glyphicon glyphiconsm glyphicon-save" aria-hidden="true"></span><br />Spara
                            </button>*@

                            <button type="submit" class="btn btn-sm saveButton" onclick="PostConfig('Save', 'New', @moduleId, 0, @showActivities, @showDocuments)" aria-label="Left Align">
                                Spara
                            </button>
                        }
                    }
                    
                    @{
                        if (moduleId != 0)
                        {


                            @*<button type="button" class="btn btn-default" aria-label="Left Align">

                                <span class="glyphicon glyphiconsm glyphicon-file" aria-hidden="true"></span><br />Nytt dokument
                            </button>*@
                            
                        }
                    }
                    @*<a class="btn btn-default" href="@Url.Action("Manage", "Courses", new { Id = Model.CourseId, getOperation = "Load" }, null)"> <span class="glyphicon glyphiconsm glyphicon-circle-arrow-left" aria-hidden="true"></span><br />Tillbaka</a>*@
                    <br />
                    
                </div><!-- end icons-->

                <div>
                    @Html.Partial("_Activities")
                </div>

                <div>
                    @Html.Partial("_ModuleDocuments")
                </div>

            </div>

            <div class="col-md-3">
                <h4 class="page-header">Lediga modulperioder</h4>
                @{
                    foreach (var period in Model.AvailableTime)
                    {
                        <div class="listElement">
                            @{
                                if ((period.FixedStart == false) && (period.FixedEnd == false))
                                {
                                    <p>Inga restriktioner</p>
                                }

                                if ((period.FixedStart == false) && (period.FixedEnd == true))
                                {
                                    <p>Före nuvarande kursstart:</p>
                                    <p>@period.End.ToShortDateString() @period.End.TimeOfDay</p>
                                }

                                if ((period.FixedStart == true) && (period.FixedEnd == false))
                                {
                                    <p>Efter nuvarande kursslut:</p>
                                    <p>@period.Start.ToShortDateString() @period.Start.TimeOfDay</p>
                                }

                                if ((period.FixedStart == true) && (period.FixedEnd == true))
                                {
                                    <p>Ledig period:</p>
                                    <p>@period.Start.ToShortDateString() @period.Start.TimeOfDay -- <br />@period.End.ToShortDateString() @period.End.TimeOfDay</p>
                                }
                            }
                        </div>
                                
                    }
                }

            </div>

        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

