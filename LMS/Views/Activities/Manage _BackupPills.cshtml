@model LMS.ViewModels.ActivityViewModel

@{
    ViewBag.Title = "Manage";
}


<br />

@{
    var activityId = Model.Id;
    var clearDate = "'2017-01-01'";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    //First container to include input section and module information
    <div class="container-fluid">

        <div class="row">


            <div class="col-md-3">
                <!--menu-->
                <br />
                <h4>Aktiviteter för @Model.ModuleName:</h4>

                @*<ul class="nav nav-pills nav-stacked">
                    <li class="active"><a href="#">Home</a></li>
                    <li><a href="#">Menu 1</a></li>
                    <li><a href="#">Menu 2</a></li>
                    <li><a href="#">Menu 3</a></li>
                </ul>*@

                <ul class="nav nav-pills nav-stacked">
                @foreach (var activity in Model.ModuleActivities)
                {
                    if (activity.Id == Model.Id)
                    {
                        @*<li class="active"><a href="#">Home</a></li>*@
                        <li class="active">@Html.ActionLink(activity.Name, "Manage", new { id = activity.Id, moduleId = Model.ModuleId, courseId = Model.CourseId, getOperation = "Load" })</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink(activity.Name, "Manage", new { id = activity.Id, moduleId = Model.ModuleId, courseId = Model.CourseId, getOperation = "Load" })</li>
                    }
                }
                </ul>

                @*@{
                    if (Model.ModuleActivities != null)
                    {
                        if (Model.ModuleActivities.Count != 0)
                        {
                            <table class="table">
                                @foreach (var activity in Model.ModuleActivities)
                                {
                                <tr>
                                    <td>
                                        @{
                                            string moduleText = "";
                                            if (activity.Id == Model.Id)
                                            {
                                                moduleText = "=> " + @activity.Name;
                                            }
                                            else
                                            {
                                                moduleText = "   " + @activity.Name;
                                            }
                                        }
                                        @Html.ActionLink(moduleText, "Manage", new { id = activity.Id, moduleId = Model.ModuleId, courseId = Model.CourseId, getOperation = "Load" })
                                    </td>

                                </tr>
                                            }
                            </table>
                                                }
                                            }
                }*@
            </div><!--end menu-->
           
            <div class="form-horizontal col-md-7">
                <h2>Hantera aktiviteter för @Model.ModuleName</h2>
                
                @{
                    if (activityId == 0)
                    {
                        <h4 class="page-header"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span>&nbsp;Skapa ny aktivitet</h4>
                    }
                    else
                    {
                        <h4 class="page-header"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span>&nbsp;Redigera aktiviteten @Model.Name</h4>
                    }
                }
          
                @{
                    if (Model.PostMessage != "")
                    {
                        <h5 class="text-danger">@Model.PostMessage</h5>
                    }
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PostNavigation)
                @Html.HiddenFor(model => model.PostOperation)
                @Html.HiddenFor(model => model.PostMessage)
                @Html.HiddenFor(model => model.CourseId)
                @Html.HiddenFor(model => model.ModuleId)
            

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3 " })
                    <div class="col-md-9">

                        @Html.TextAreaFor(model => model.Description, 6, 40, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">

                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(model => model.Period, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SelectActivityType, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(model => model.SelectActivityType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectActivityType, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div>
                    <!--buttons-->
                    <br />
                    @*POST buttons for save (new or update) and return to manage course view
                @{
                    if (moduleId == 0)
                    {
                        <p class="btn btn-default">SAVE(U)/R</p>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'Update', @moduleId, 0)">SAVE(U)/R</button>
                    }
                }
                <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'New', @moduleId, 0)">SAVE(N)/R</button>
                @*POST buttons for save (new or update) and remain in manage module view*@
                    @*@{
                    if (moduleId == 0)
                    {
                        <p class="btn btn-default">SAVE(U)</p>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'Update', @moduleId, 0)">SAVE(U)</button>
                    }
                }*@
                    @*<button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'New', @moduleId, 0)">SAVE(N)</button>
                @*Clear form button without saving module data, remain with same module identity in form*@
                    @*<p class="btn btn-default" onclick="ClearModuleForm(@clearDate, @clearDate)">CLEAR</p>*@
                </div> @*end buttons*@

                <div class="btn-toolbar">

                    <!-- icons-->
                    @{
                        if (activityId != 0)
                        {
                            <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'Update', @activityId, 0)" aria-label="Left Align">
                                <span class="glyphicon glyphiconsm glyphicon-save" aria-hidden="true"></span><br />Updatera
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'New', @activityId, 0)" aria-label="Left Align">
                                <span class="glyphicon glyphiconsm glyphicon-save" aria-hidden="true"></span><br />Spara
                            </button>
                        }
                    }
                    <a class="btn btn-default" href="@Url.Action("Manage", "Activities", new { id = 0, moduleId = Model.ModuleId, courseId = Model.CourseId, getOperation = "New", viewMessage = "" })"> <span class="glyphicon glyphiconsm glyphicon-plus-sign" aria-hidden="true"></span><br />Ny aktivitet</a>
                    @{
                        if (activityId != 0)
                        {
      
                            <button type="button" class="btn btn-default" aria-label="Left Align">

                                <span class="glyphicon glyphiconsm glyphicon-file" aria-hidden="true"></span><br />Nytt dokument
                            </button>
                            @*GET button to reach delete course view*@
                            <a class="btn btn-default" href="@Url.Action("Delete", "Activities", new { id = activityId, moduleId=Model.ModuleId, courseId=Model.CourseId, deleteType = "Single" })"> <span class="glyphicon glyphiconsm glyphicon-trash" aria-hidden="true"></span><br />Ta bort</a>
                        }
                    }
                    <a class="btn btn-default" href="@Url.Action("Manage", "Modules", new { Id = Model.ModuleId,courseId = Model.CourseId, getOperation = "Load" }, null)"> <span class="glyphicon glyphiconsm glyphicon-circle-arrow-left" aria-hidden="true"></span><br />Tillbaka</a>
                    <br />
                    
                </div><!-- end icons-->

                <div>
                   

                </div>


            </div>

            <div class="col-md-2">
                <br />
                <br />
                <br />
           
            </div>


        </div>
    </div>

}
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

