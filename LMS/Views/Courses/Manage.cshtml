@model LMS.ViewModels.CourseViewModel

@{
    ViewBag.Title = "Manage";
}

<h2>Manage courses</h2>
<h4 class="text-danger">@Model.PostMessage</h4>
<br />

@{
    var courseId = Model.Id;
    var clearDate = "'2017-01-01'";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    //First container to include input section and course information
    <div class="container-fluid">
        <div class="row">
            <div class="form-horizontal col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                <h4>Input to the @Model.Name course:</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PostNavigation)
                @Html.HiddenFor(model => model.PostOperation)
                @Html.HiddenFor(model => model.PostMessage)
                @Html.HiddenFor(model => model.ModuleId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*Clear form button without saving module data, remain with same course identity in form*@
                        <p class="btn btn-default" onclick="ClearCourseForm(@clearDate, @clearDate)">CLEAR</p>
                        @*GET button to Clear form without saving course data, requesting a zero course identity in form*@
                        <button class="btn btn-default">@Html.ActionLink("NEW", "Manage", new { id = 0, getOperation = "New", viewMessage = "Form cleared for new course" })</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*POST buttons for save (new or update) and remain in manage module view*@
                        @{
                            if (courseId == 0)
                            {
                                <p class="btn btn-default">SAVE(U)</p>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-default" onclick="CoursePostConfig('Save', 'Update', @courseId, 0)">SAVE(U)</button>
                            }
                        }
                        <button type="submit" class="btn btn-default" onclick="CoursePostConfig('Save', 'New', @courseId, 0)">SAVE(N)</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*POST buttons for save (new or update) and return to manage course view*@
                        @{
                            if (courseId == 0)
                            {
                                <p class="btn btn-default">SAVE(U)/R</p>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-default" onclick="CoursePostConfig('SaveRet', 'Update', @courseId, 0)">SAVE(U)/R</button>
                            }
                        }
                        <button type="submit" class="btn btn-default" onclick="CoursePostConfig('SaveRet', 'New', @courseId, 0)">SAVE(N)/R</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*Navigation button for return to manage course view without saving module data*@
                        <button class="btn btn-default">@Html.ActionLink("RETURN", "Index", "Courses")</button>
                    </div>
                </div>
            </div> @*End of form-horizontal*@

            <div class="col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                <h4>Available courses:</h4>
                <br />

                @{
                    if (Model.AllCourses != null)
                    {
                        if (Model.AllCourses.Count != 0)
                        {
                            <div>
                                @*GET button to reach delete module view*@
                                <button class="btn btn-default">@Html.ActionLink("REMOVE ALL", "Delete", new { deleteType = "All" })</button>
                                <br />
                                <br />
                            </div>

                            <table class="table">
                                @foreach (var course in Model.AllCourses)
                        {
                                    <tr>
                                        <td>
                                            @{
                                                string courseText = "";
                                                if (course.Id == Model.Id)
                                                {
                                                    courseText = "=> " + @course.Name;
                                                }
                                                else
                                                {
                                                    courseText = "   " + @course.Name;
                                                }
                                            }
                                            @courseText
                                        </td>
                                        <td>
                                            @*GET button to load selected course into form and remain in manage course view*@
                                            <button class="btn btn-default">@Html.ActionLink("LOAD", "Manage", new { id = course.Id, getOperation = "Load" })</button>
                                            @*GET button to reach delete course view*@
                                            <button class="btn btn-default">@Html.ActionLink("REMOVE", "Delete", new { id = course.Id, deleteType = "Single" })</button>
                                        </td>
                                    </tr>
                                                }
                            </table>
                                                    }
                                                }
                }
            </div>

        </div> @*End of first row*@
    </div> @*End of first container*@

                                                //Second container to include module and document information
                                                <div class="container-fluid">
                                                    <div class="row">
                                                        <br />
                                                        @{
                                                            if (courseId != 0)
                                                            {
                                                                <div class="col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                                                                    <h4>Modules for the @Model.Name course:</h4>
                                                                    <br />
                                                                    <div>
                                                                        @*POST button to save module (module update) and proceed to manage activity view*@
                                                                        <button type="submit" class="btn btn-default" onclick="CoursePostConfig('SaveAct', 'New', @courseId, 0)">NEW</button>
                                                                        <br />
                                                                        <br />
                                                                    </div>

                                                                    @{
                                                                        if (Model.CourseModules != null)
                                                                        {
                                                                            <table class="table">
                                                                                @foreach (var module in Model.CourseModules)
                                                                                {
                                                                                    <tr>
                                                                                        <td>
                                                                                            @module.Name
                                                                                        </td>
                                                                                        <td>
                                                                                            @*POST buttons for save course (course update) and proceed to manage module view*@
                                                                                            <button type="submit" class="btn btn-default" onclick="CoursePostConfig('SaveAct', 'Update', @courseId, @module.Id)">MANAGE</button>
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                            </table>
                                                                        }
                                                                    }
                                                                </div>
                                                                        }
                                                        }
                                                        @{
                                                            if (courseId != 0)
                                                            {
                                                                <div class="col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                                                                    <h4>Documents for the @Model.Name course:</h4>
                                                                    <br />
                                                                    <p>DOCUMENT 1</p>
                                                                    <p>DOCUMENT 2</p>
                                                                    <p>DOCUMENT 3</p>
                                                                </div>
                                                            }
                                                        }
                                                    </div> @*End of second row*@
                                                </div> @*End of second container*@
                                                            }

<div>
    <br>
    <button class="btn btn-default col-md-offset-1">@Html.ActionLink("Course catalogue", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}