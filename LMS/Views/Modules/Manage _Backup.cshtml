@*@model LMS.Models.Module*@
@model LMS.ViewModels.ModuleViewModel

@{
    ViewBag.Title = "Manage";
}

@*<div class="container-fluid">*@



    <h2>Manage modules for the @Model.CourseName course</h2>
    <h4 class="text-danger">@Model.PostMessage</h4>

    @{
        var moduleId = Model.Id;
        var clearDate = "'2017-01-01'";
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-offset-1 col-md-5" style="background-color:lavender;">
                    TEST TEXT INITAL AT TOP
                </div>
                <div class="col-md-offset-1 col-md-5 " style="background-color:lavenderblush;">
                    TEST TEXT SECOND AT TOP
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.PostNavigation)
                    @Html.HiddenFor(model => model.PostOperation)
                    @Html.HiddenFor(model => model.PostMessage)
                    @Html.HiddenFor(model => model.CourseId)
                    @Html.HiddenFor(model => model.ActivityId)

                    <div class="col-md-offset-7 col-md-5" style="background-color:lavender;">
                        <p>TEST TEXT</p>
                        <p>TEST TEXT</p>
                        <p>TEST TEXT</p>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4" style="background-color:lavender;">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4">
                            @*Clear form button without saving module data, remain with same module identity in form*@
                            <p class="btn btn-default" onclick="ClearModuleForm(@clearDate, @clearDate)">CLEAR</p>
                            @*GET button to Clear form without saving module data, requesting a zero module identity in form*@
                            <button class="btn btn-default">@Html.ActionLink("NEW", "Manage", new { id = 0, courseId = Model.CourseId, viewMessage = "Form cleared for new module" })</button>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4" style="background-color:lavender;">
                            @*POST buttons for save (new or update) and remain in manage module view*@
                            @{
                                if (moduleId == 0)
                                {
                                    <p class="btn btn-default">xSAVE(U)</p>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'Update', @moduleId, 0)">SAVE(U)</button>
                                }
                            }
                            <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'New', @moduleId, 0)">SAVE(N)</button>
                        </div>
                    </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-4" style="background-color:lavender;">
                                @*POST buttons for save (new or update) and return to manage course view*@
                                @{
                                    if (moduleId == 0)
                                    {
                                        <p class="btn btn-default">xSAVE(U)->RET</p>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'Update', @moduleId, 0)">SAVE(U)/R</button>
                                    }
                                }
                                <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'New', @moduleId, 0)">SAVE(N)/R</button>
                            </div>
                        </div>
                        

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4">
                            @*Navigation button for return to manage course view without saving module data*@
                            <button class="btn btn-default">@Html.ActionLink("RETURN", "Manage", "Courses", new { Id = Model.CourseId }, null)</button>
                        </div>
                    </div>

                </div>

                <div class="col-md-offset-1 col-md-5" style="background-color:lavender;">
                    TEST TEXT
                </div>

                @*<div class="form-group">*@
                <div class="col-md-offset-1 col-md-5">
                    <h4>Modules defined for the @Model.CourseName course:</h4>
                    <div>
                        @*GET button to reach delete module view*@
                        <button class="btn btn-default">@Html.ActionLink("EMPTY", "Delete", new { courseId = Model.CourseId, deleteType = "All" })</button>
                        <br />
                        <br />
                    </div>
                    <table class="table">
                        @foreach (var module in Model.CourseModules)
                        {
                            <tr>
                                <td>
                                    @{
                                        string moduleText = "";
                                        if (module.Id == Model.Id)
                                        {
                                            moduleText = "=> " + @module.Name;
                                        }
                                        else
                                        {
                                            moduleText = "   " + @module.Name;
                                        }
                                    }
                                    @moduleText
                                </td>
                                <td>
                                    @*GET button to load selected module into form and remain in manage module view*@
                                    <button class="btn btn-default">@Html.ActionLink("UPDATE", "Manage", new { id = module.Id, courseId = Model.CourseId })</button>
                                    @*GET button to reach delete module view*@
                                    <button class="btn btn-default">@Html.ActionLink("REMOVE", "Delete", new { id = module.Id, courseId = Model.CourseId, deleteType = "Single" })</button>
                                </td>
                            </tr>
                                        }
                    </table>
                </div>
                @*</div>*@


                @*test end ROW and new*@
            </div>
            </div>

            <div class="container-fluid">

                <div class="row">

                    @{
                        if (moduleId != 0)
                        {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-5" style="background-color:lavender;">
                                    <h4>Activities defined for the @Model.Name module:</h4>
                                    <div>
                                        @*POST button to save module (module update) and proceed to manage activity view*@
                                        <button type="submit" class="btn btn-default" onclick="PostConfig('SaveAct', 'New', @moduleId, 0)">SAVE->ACT(N)</button>
                                        <br />
                                        <br />
                                    </div>

                                    <table class="table">
                                        @foreach (var activity in Model.Activities)
                    {
                                            <tr>
                                                <td>
                                                    @activity.Name
                                                </td>
                                                <td>
                                                    @*POST buttons for save module (module update) and proceed to manage activity view*@
                                                    <button type="submit" class="btn btn-default" onclick="PostConfig('SaveAct', 'Update', @moduleId, @activity.Id)">SAVE->ACT(U)</button>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>
                        }
                    }
                    @{
                        if (moduleId != 0)
                        {
                            <div class="form-group">
                                <div class="col-md-offset-1 col-md-4" style="background-color:lavender;">
                                    <h4>Documents defined for the @Model.Name module:</h4>

                                </div>
                            </div>
                        }
                    }
                </div>
                }

                </div>
                <div>
                    <button class="btn btn-default">@Html.ActionLink("Module catalogue", "Index")</button>
                </div>

                @*CONTAINER*@
                @*</div>*@

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
