@model LMS.Models.RegisterViewModel

@{
    ViewBag.Title = "Lägg till ny användare";
}

<h2>Lägg till ny användare</h2>

<div class="container">
    <div class="row">

        <div class="col-md-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>@string.Format("Skapa ny användare med rollen {0}", Model.UserRole)</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserRole)

                    @{
                        if (Model.UserRole == "Student")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                  
                                    @Html.DropDownListFor(model => model.CourseId, new SelectList(ViewBag.AllCourses, "Value", "Text"), "Välj kurs", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                       
                                </div>
                            </div>
                       }

                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Spara" class="btn btn-default" />
                            @if (Model.UserRole == "Teacher")
                            {
                                @Html.ActionLink("Tillbaka till lärarlista", "ListTeachers", "AdminUsers")
                            }
                            else
                            {
                                @Html.ActionLink("Tillbaka till elevlista", "ListStudents", "AdminUsers")
                            }
                        </div>
                    </div>
                </div>
   }


        </div>
        <div class="col-md-12">
           <p class="text-danger">@ViewBag.ErrorDesc</p>
            @if (Model.UserRole == "Student" && Model.CourseId > 0)
            {
                Html.RenderAction("ListEnrolledStudents");
            }


        </div>

    </div>
</div>
