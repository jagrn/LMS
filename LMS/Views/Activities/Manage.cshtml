@model LMS.ViewModels.ActivityViewModel

@{
    ViewBag.Title = "Manage";
}

<h2>Manage activities for the @Model.ModuleName course</h2>
<h4 class="text-danger">@Model.PostMessage</h4>
<br />

@{
    var activityId = Model.Id;
    var clearDate = "'2017-01-01'";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    //First container to include input section and activity information
    <div class="container-fluid">
        <div class="row">
            <div class="form-horizontal col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                <h4>Input to the @Model.Name activity:</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PostNavigation)
                @Html.HiddenFor(model => model.PostOperation)
                @Html.HiddenFor(model => model.PostMessage)
                @Html.HiddenFor(model => model.ModuleId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActitvityType, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ActitvityType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActitvityType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*Clear form button without saving module data, remain with same module identity in form*@
                        <p class="btn btn-default" onclick="ClearActivityForm(@clearDate, @clearDate, @clearDate)">CLEAR</p>
                        @*Clear form button without saving module data, requesting a zero module identity in form*@
                        <button class="btn btn-default">@Html.ActionLink("NEW", "Manage", new { id = 0, moduleId = Model.ModuleId, courseId = Model.CourseId, viewMessage = "Form cleared for new activity" })</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*POST buttons for save (new or update) and remain in manage module view*@
                        @{
                            if (activityId == 0)
                            {
                        <p class="btn btn-default">SAVE(U)</p>
                            }
                            else
                            {
                        <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'Update', @activityId)">SAVE(U)</button>
                            }
                        }
                        <button type="submit" class="btn btn-default" onclick="PostConfig('Save', 'New', @activityId)">SAVE(N)</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*POST buttons for save (new or update) and return to manage course view*@
                        @{
                            if (activityId == 0)
                            {
                        <p class="btn btn-default">xSAVE(U)/R</p>
                            }
                            else
                            {
                        <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'Update', @activityId)">SAVE(U)/R</button>
                            }
                        }
                        <button type="submit" class="btn btn-default" onclick="PostConfig('SaveRet', 'New', @activityId)">SAVE(N)/R</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        @*Navigation button for return to manage course view without saving module data*@
                        <button class="btn btn-default">@Html.ActionLink("RETURN", "Manage", "Modules", new { Id = Model.ModuleId, courseId = Model.CourseId }, null)</button>
                    </div>
                </div>
            </div> @*End of form-horizontal*@

            <div class="col-md-offset-1 col-md-5" style="background-color:antiquewhite;">
                <h4>Activities for the @Model.ModuleName module:</h4>
                <div>
                    <button class="btn btn-default">@Html.ActionLink("REMOVE ALL", "Delete", new { moduleId = Model.ModuleId, courseId = Model.CourseId, deleteType = "All" })</button>
                    <br />
                    <br />
                </div>
                <table class="table">
                    @foreach (var activity in Model.ModuleActivities)
                    {
                        <tr>
                            <td>
                                @{
                                    string activityText = "";
                                    if (activity.Id == Model.Id)
                                    {
                                        activityText = "=> " + @activity.Name;
                                    }
                                    else
                                    {
                                        activityText = "   " + @activity.Name;
                                    }
                                }
                                @activityText
                            </td>
                            <td>
                                @*GET button to load selected module into form and remain in manage module view*@
                                <button class="btn btn-default">@Html.ActionLink("LOAD", "Manage", new { id = activity.Id, moduleId = Model.ModuleId, courseId = Model.CourseId })</button>
                                @*GET button to reach delete module view*@
                                <button class="btn btn-default">@Html.ActionLink("REMOVE", "Delete", new { id = activity.Id, moduleId = Model.ModuleId, courseId = Model.CourseId, deleteType = "Single" })</button>
                            </td>
                        </tr>
                    }
                </table>
            </div>

        </div> @*End of first row*@
    </div> @*End of first container*@

    //Second container to include document information
    <div class="container-fluid">
        <div class="row">
        <br />
            @{
                if (activityId != 0)
                {
                    <div class="col-md-offset-7 col-md-5" style="background-color:antiquewhite;">
                        <h4>Documents for the @Model.Name activity:</h4>
                        <p>DOCUMENT 1</p>
                        <p>DOCUMENT 2</p>
                        <p>DOCUMENT 3</p>
                    </div>
                }
            }
                                        
        </div> @*End of second row*@
    </div> @*End of second container*@
}

<div>
    <br />
    <button class="btn btn-default col-md-offset-1">@Html.ActionLink("Activity catalogue", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


